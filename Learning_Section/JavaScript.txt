[+++]----------------+---------------[ Javascript ]----------------+---------------[+++]


//Data Types Section -------------------------------

    _ var (can be declare in block scope and access from outside)
    _ let //can reassign new value 
    _ const  //can't reassign new value


//Objects-------------------------------

    const person = {
        name: "Alice",
        age: 30
    };

console.log('Hello' + person.name + ',' + 'I am' + person.age)

    //Array-------------------------------

    let fruits = ["apple", "banana", "cherry"];

    //Get alll value array Using a for loop:

    for (let i = 0; i < fruits.length; i++) {
        console.log(fruits[i]);
    }

    //Get alll value array Using forEach:

    fruits.forEach(function(fruit) {
        console.log(fruit);
    });

*Built in method that using with Array----------------------------

    1. push
    fruits.push("orange");  // Adds "orange" to the end of the array

    2. unshift
    fruits.unshift("mango");  // Adds "mango" to the start of the array

    3. pop
    fruits.pop();  // Removes the last element ("orange")

    4. shift
    fruits.shift();  // Removes the first element ("mango")

//Example Combining Both Objects and Arrays-------------------------------

    1. Array in Object

        let person = {
            name: "Alice",
            hobbies: ["reading", "hiking", "cooking"]
        };

    console.log(person.hobbies[1]);  

    2. Array of Object

        let people = [
            { name: "Alice", age: 30 },
            { name: "Bob", age: 25 },
            { name: "Charlie", age: 35 }
        ];
        console.log(people[0].name);  // "Alice"

//Operators-------------------------------

1. JavaScript Arithmetic Operators----------------------------

    +	Addition

    -	Subtraction

    *	Multiplication

    /	Division

    %	Modulus (Remainder)                 x = 10 % 3; remainder = 1

    ++	Increment (Increase by 1)

    --	Decrement (Decrease by 1)

    **	Exponentiation (Power)              x = 2 ** 3; // 2 raised to the power of 3 = 8

2. JavaScript assignment operators----------------------------

    =	Basic assignment	x = 10;

    +=	Addition assignment	x += 5;	            x = x + 5;

    -=	Subtraction assignment	x -= 3;	        x = x - 3;

    *=	Multiplication assignment	x *= 2;	    x = x * 2;

    /=	Division assignment	x /= 2;         	x = x / 2;

3. JavaScript Comparison Operators----------------------------

    ==	Equal to (loose comparison)	5 == '5'	                true

    ===	Strict Equal to (checks value and type)	5 === '5'	    false

    !=	Not equal to (loose comparison)	5 != '5'	            false

    !==	Strict Not Equal to (checks value and type)	5 !== '5'	true

    >	Greater than	10 > 5	                                true

    >=	Greater than or equal to	10 >= 5	                    true

    <	Less than	5 < 10	                                    true

    <=	Less than or equal to	5 <= 10	                        true

//Functions-------------------------------

    1. Basic Function Declaration----------------------------

    function name(){
        - - - - - 
    }

2. Function with Parameters----------------------------

    function name(fname, lname){
        console.log(fname + 'Hello' + lname);
    }

3. Function with Return Value ----------------------------

    function name(x, y){
        return x + y;
    }
    let total = name(10, 10);

4. Function Expression (Anonymous Function)----------------------------

    const hello = function(name){
        console.log('Hello Im' + name + '!');
    }

    hello('Voxodinson');

5. Arrow Functions (ES6+)----------------------------

    const func_name = () => {
        console.log("Hello, " + name + "!");
    }

    func_name("David"); 

    Noted: for short hand arrow function (If the arrow function has a single expression)

    const func_name = (x, y) => x + y;

    const total = func_name(10, 10);

6. Function with Default Parameters----------------------------

    function func_name(name = "Guest") {
        console.log("Hello, " + name + "!");
    }

    greet();            //can be null or empty
    greet("Emma");      //give new value

//async--------------------------
    //how async function work
        Start
        Processing...
        End

    async function fetchUsers() {
        let response = await fetch("-----");
        let users = await response.json();
        console.log(users);
    }

    //Promise -------------------------------

    1. ស្ថានភាព (States) របស់ Promise
        Promise មាន ៣ ស្ថានភាពចម្បង៖
        ✅ Pending - កំពុងរង់ចាំ
        ✅ Fulfilled - បានជោគជ័យ
        ✅ Rejected - បរាជ័យ

    let promise = new Promise((resolve, reject) => {
        let success = true;
        
        if (success) {
            resolve("Operation successful!");
        } else {
            reject("Operation failed.");
        }
    });


//await----------------------

    function fetchData() {
        return new Promise((resolve) => {
            setTimeout(() => resolve("✅ Data Loaded!"), 2000);
        });
    }

    async function getData() {
        console.log("Fetching...");
        let data = await fetchData();
        console.log(data);
    }

    getData();



fetchUsers();



7. Rest Parameters----------------------------

    function func_name(...numbers) {
        let total = 0;
        for (let num of numbers) {
            total += num;
        }
        return total;
    }
    console.log(sum(1, 2, 3, 4));  // Prints: 10

//If Else Staments-------------------------------

    1. Basic if Statement

        let age = 18;
        if (age >= 18) {
            console.log("You are eligible to vote.");
        }

        //Ternary Operator (? :) – Shorter if...else

            let message = age >= 18 ? "Adult" : "Minor";

    2. if...else Statement

        let age = 16;

        if (age >= 18) {
            console.log("You can vote.");
        } else {
            console.log("You are too young to vote.");
        }
        
    3. if...else if...else Statement
        let score = 85;

        if (score >= 90) {
            console.log("Grade: A");

        } else if (score >= 80) {
            console.log("Grade: B");

        } else if (score >= 70) {
            console.log("Grade: C");

        } else {
            console.log("Grade: F");
        }
        
//JavaScript switch...case Statement-------------------------------

    1. Example 1: Basic switch Statement
    
        let number = 3;

        switch (number) {
            case 1:
                console.log("One");
                break;
            case 2:
                console.log("Two");
                break;
            case 3:
                console.log("Three");
                break;
            default:
                console.log("Not in the range");
        }

//For Loop-------------------------------
    1. Basic Syntax

        for (initialization; condition; increment/decrement) {
            // Code to be executed
        }

    Example
        const total = 10;
        for (let i = 0; i < total; i++) {
            text += "The number is " + i + "<br>";
        }

//While Loop-------------------------------
    1. Syntax
        while (condition) {
            // Code to be executed
        }
    
    Example

        let i = 0;
        let total = 10;

        while (i < 10) {
            console.log(i);
            i++;
        }

//Set And Map-------------------------------
    1. Set
        let mySet = new Set([1, 2, 3, 4, 4]);
        console.log(mySet);  // Set {1, 2, 3, 4}
    
    2. Map
        let myMap = new Map();

        myMap.set('name', 'Alice');     (key, value)
        myMap.set('age', 30);

        console.log(myMap.get('name'));
        console.log(myMap.has('age'));

//Rest and Spread Operators-------------------------------

    1. Rest (Function Arguments):

    function sum(...numbers) {
        return numbers.reduce((a, b) => a + b, 0);
    }

    console.log(sum(1, 2, 3, 4));  // 10
    
    2. Spread (Array or Object):

    let arr1 = [1, 2];
    let arr2 = [3, 4];

    let merged = [...arr1, ...arr2];
    console.log(merged);  // [1, 2, 3, 4]

    const obj1 = { name: "Alice" };
    const obj2 = { age: 30 };
    
    const combinedObj = { ...obj1, ...obj2 };

    console.log(combinedObj);


//Modules (Export and Import) -------------------------------

    // person.js
        export function greet(name) {
            console.log("Hello, " + name);
        }

    // main.js
        import { 
            name, 
            greet 
        } from './person.js';

        greet('Voxodinson');

[+++]----------------+---------------[ Javascript DOM ]----------------+---------------[+++]

JavaScript DOM (Document Object Model) is a programming interface that allows you to interact with and 
manipulate HTML and CSS using JavaScript. Here are some key aspects of the DOM:

//Selecting Elements------------------------------

    // Select by ID
    let element = document.getElementById("myId");

    // Select by class name
    let elements = document.getElementsByClassName("myClass");

    // Select by tag name
    let elements = document.getElementsByTagName("div");

    // Select with querySelector (first match)
    let element = document.querySelector(".myClass");

    // Select with querySelectorAll (all matches)
    let elements = document.querySelectorAll(".myClass");

//Modifying Elements------------------------------

    // Change inner text
    element.textContent = "New text";

    // Change inner HTML
    element.innerHTML = "<b>Bold text</b>";

    // Change a style
    element.style.color = "red";
